# Copyright 2023 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

# Auto-Generated by cargo-ebuild 0.5.4-r1

EAPI=8

if [[ ${PV} != *9999 ]]; then
CRATES="
	anstream@0.5.0
	anstyle@1.0.3
	anstyle-parse@0.2.1
	anstyle-query@1.0.0
	anstyle-wincon@2.1.0
	autocfg@1.1.0
	bstr@1.7.0
	cc@1.0.83
	cfg-if@1.0.0
	clap@4.4.4
	clap_builder@4.4.4
	clap_derive@4.4.2
	clap_lex@0.5.1
	colorchoice@1.0.0
	enum-display-derive@0.1.1
	heck@0.4.1
	libc@0.2.148
	memchr@2.6.4
	mlua@0.9.1
	mlua-sys@0.3.2
	num-traits@0.2.17
	once_cell@1.18.0
	peresil@0.3.0
	pkg-config@0.3.27
	pkg-version@1.0.0
	pkg-version-impl@0.1.1
	proc-macro-hack@0.5.20+deprecated
	proc-macro2@1.0.67
	quick-error@1.2.3
	quote@1.0.33
	rustc-hash@1.1.0
	serde@1.0.189
	serde_derive@1.0.189
	strsim@0.10.0
	sxd-document@0.3.2
	sxd-xpath@0.4.2
	syn@1.0.109
	syn@2.0.37
	thiserror@1.0.48
	thiserror-impl@1.0.48
	typed-arena@1.7.0
	unicode-ident@1.0.12
	utf8parse@0.2.1
	windows-sys@0.48.0
	windows-targets@0.48.5
	windows_aarch64_gnullvm@0.48.5
	windows_aarch64_msvc@0.48.5
	windows_i686_gnu@0.48.5
	windows_i686_msvc@0.48.5
	windows_x86_64_gnu@0.48.5
	windows_x86_64_gnullvm@0.48.5
	windows_x86_64_msvc@0.48.5
"
fi

declare -A GIT_CRATES=(
	[virt]="https://gitlab.com/libvirt/libvirt-rust.git;b0506ed9cca960dd5f7679bca434a19d4b5cfc1d;cargo_home/git/checkouts/libvirt-rust-a02c7639fc7cb7e7/b0506ed/"
)

inherit edo cargo go-module

DESCRIPTION="Virtualization linting library"
HOMEPAGE="https://gitlab.com/MichalPrivoznik/virt-lint"

if [[ ${PV} == *9999 ]] ; then
	EGIT_REPO_URI="https://gitlab.com/MichalPrivoznik/virt-lint"
	inherit git-r3
else
	SRC_URI="https://gitlab.com/MichalPrivoznik/virt-lint/-/archive/v${PV}/libvirt-v${PV}.tar.bz2 -> ${P}.tar.bz2
		$(cargo_crate_uris ${CRATES})"
	KEYWORDS="~amd64 ~x86"
fi

# License set may be more restrictive as OR is not respected
# use cargo-license for a more accurate license picture
LICENSE="0BSD Apache-2.0 Apache-2.0-with-LLVM-exceptions BSD BSD-2 ISC LGPL-2.1 LGPL-3+ MIT Unicode-DFS-2016 Unlicense"
SLOT="0"
IUSE="+c +go"
REQUIRED_USE="go? ( c )"

DEPEND="
	dev-lang/lua:5.4
	c? ( app-emulation/libvirt )"
RDEPEND="${DEPEND}"
BDEPEND="${RDEPEND}
	c? ( dev-util/cargo-c )
	go? ( dev-lang/go )"

# rust does not use *FLAGS from make.conf, silence portage warning
# update with proper path to binaries this crate installs, omit leading /
QA_FLAGS_IGNORED="usr/bin/${PN}"

src_unpack() {
	if [[ ${PV} == *9999* ]]; then
		git-r3_src_unpack
		cargo_live_src_unpack
	else
		default
		cargo_src_unpack
	fi
}

src_compile() {
	export CARGO_HOME="${ECARGO_HOME}"
	local cargoargs=(
		--library-type=cdylib
		--prefix=/usr
		--libdir="/usr/$(get_libdir)"
		$(usev !debug '--release')
	)

	cargo_src_compile

	use c && edo cargo cbuild "${cargoargs[@]}"
}

src_install() {
	export CARGO_HOME="${ECARGO_HOME}"
	local cargoargs=(
		--library-type=cdylib
		--prefix=/usr
		--libdir="/usr/$(get_libdir)"
		--destdir="${ED}"
		$(usev !debug '--release')
	)

	cargo_src_install --path ./tools

	emake DESTDIR="${D}" install-data

	use c && edo cargo cinstall "${cargoargs[@]}"
}
